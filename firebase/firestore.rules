rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Only self access
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Posts: Anyone can read, only creator can update/delete
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }

    // Comments: Anyone can read, only comment owner can update/delete
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Likes: Anyone can read, only user who liked can delete
    match /likes/{likeId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Notifications: Only owner can read/write
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Admin-only area: Only admins can read, nobody can write
    match /admin/{document=**} {
      allow read: if request.auth != null && request.auth.token.admin == true;
      allow write: if false;
    }

    // Default Deny All
    match /{document=**} {
      allow read, write: if false;
    }

  }
}
